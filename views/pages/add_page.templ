
package pages

import "bajetapp/views/component"

templ AddTransaction(csrfToken string) {
	@component.Base() {
		<section class="add-expense">
			<form id="add-expense" method="POST" action="/trx">
                <input type="hidden" name="_csrf" value={ csrfToken }>
				<label for="description">What ?</label>
				<input type="text" id="description" name="expense-name" required autofocus onfocus="this.setSelectionRange(this.value.length, this.value.length);"/>
				<div style="display: flex; justify-content: space-between;">
					<fieldset id="expense-category" style="flex: 1; margin-right: 10px;">
						<legend>Expense:</legend>
						<label for="radio-1">
							<input type="radio" id="radio-1" name="radio" value="food" checked/>
							🍽️ Food
						</label>
						<label for="radio-2">
							<input type="radio" id="radio-2" name="radio" value="transport"/>
							🚗 Transport
						</label>
						<label for="radio-3">
							<input type="radio" id="radio-3" name="radio" value="entertainment"/>
							🎬 Entertainment
						</label>
						<label for="radio-4">
							<input type="radio" id="radio-4" name="radio" value="utilities"/>
							💡 Utilities
						</label>
						<label for="radio-6">
							<input type="radio" id="radio-6" name="radio" value="health"/>
							🏥 Other
						</label>
					</fieldset>
					<fieldset id="income-category" style="flex: 1; margin-left: 10px;">
						<legend>Income:</legend>
						<label for="radio-7">
							<input type="radio" id="radio-7" name="radio" value="salary"/>
							💼 Salary
						</label>
						<label for="radio-8">
							<input type="radio" id="radio-8" name="radio" value="business"/>
							📈 Business
						</label>
						<label for="radio-9">
							<input type="radio" id="radio-9" name="radio" value="investment"/>
							📊 Investment
						</label>
						<label for="radio-10">
							<input type="radio" id="radio-10" name="radio" value="gift"/>
							🎁 Gift
						</label>
						<label for="radio-11">
							<input type="radio" id="radio-11" name="radio" value="other"/>
							🏥 Other
						</label>
					</fieldset>
				</div>
				<label for="amount">How Much ?</label>
				<!-- Include Cleave.js library -->
				<script src="https://cdn.jsdelivr.net/npm/cleave.js@1.6.0/dist/cleave.min.js"></script>
				<!-- Input field for amount with Indonesian Rupiah formatting -->
				<input type="text" id="amount" name="amount" required/>
				<script>
                    document.addEventListener('DOMContentLoaded', (event) => {
                        new Cleave('#amount', {
                            numeral: true,
                            numeralThousandsGroupStyle: 'thousand',
                            numeralDecimalMark: ',',
                            delimiter: '.',
                            prefix: 'Rp ',
                            rawValueTrimPrefix: true
                        });
                    });
                </script>
				<label for="expense-date">When ?</label>
				<input type="datetime-local" id="expense-date" name="expense-date" required/>
				<script>
                    document.addEventListener('DOMContentLoaded', (event) => {
                        const expenseDateInput = document.getElementById('expense-date');
                        const now = new Date();
                        const offset = now.getTimezoneOffset() * 60000;
                        const localISOTime = new Date(now - offset).toISOString().slice(0, 16);
                        expenseDateInput.value = localISOTime;
                    });
                </script>
				<label for="trx-type">Submit !</label>
				<button type="submit" id="submit-button" disabled>Add Expense</button>
				<script>
                    document.addEventListener('DOMContentLoaded', (event) => {
                        const submitButton = document.getElementById('submit-button');
                        const expenseNameInput = document.getElementById('expense-name');
                        const expenseAmountInput = document.getElementById('expense-amount');
                        const expenseDateInput = document.getElementById('expense-date');

                        const validateForm = () => {
                            const expenseName = expenseNameInput.value.trim();
                            const expenseAmount = parseFloat(expenseAmountInput.value.replace(/[^0-9.-]+/g,""));
                            const expenseDate = new Date(expenseDateInput.value);

                            if (expenseName && expenseAmount > 0 && !isNaN(expenseDate.getTime())) {
                                submitButton.disabled = false;
                            } else {
                                submitButton.disabled = true;
                            }
                        };

                        expenseNameInput.addEventListener('input', validateForm);
                        expenseAmountInput.addEventListener('input', validateForm);
                        expenseDateInput.addEventListener('input', validateForm);

                        validateForm(); // Initial validation
                    });
                </script>
				<script>
                    document.addEventListener('DOMContentLoaded', (event) => {
                        const submitButton = document.getElementById('submit-button');
                        const expenseCategoryFieldset = document.getElementById('expense-category');
                        const incomeCategoryFieldset = document.getElementById('income-category');
                        
                        const updateButtonLabel = () => {
                            const selectedExpense = expenseCategoryFieldset.querySelector('input[name="radio"]:checked');
                            const selectedIncome = incomeCategoryFieldset.querySelector('input[name="radio"]:checked');
                            
                            if (selectedIncome) {
                                submitButton.textContent = 'Add Income';
                            } else if (selectedExpense) {
                                submitButton.textContent = 'Add Expense';
                            }
                        };

                        expenseCategoryFieldset.addEventListener('change', updateButtonLabel);
                        incomeCategoryFieldset.addEventListener('change', updateButtonLabel);
                    });
                </script>
			</form>
		</section>
	}
}
